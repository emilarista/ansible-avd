{#
 Copyright (c) 2023-2025 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# eos - router traffic engineering #}
{% if router_traffic_engineering.enabled is arista.avd.defined(true) %}
!
router traffic-engineering
{%     if router_traffic_engineering.segment_routing is arista.avd.defined %}
{%         set ns = namespace(delimiter=false) %}
   segment-routing
{%         if router_traffic_engineering.segment_routing.colored_tunnel_rib is arista.avd.defined(true) %}
{%             set ns.delimiter = true %}
      rib system-colored-tunnel-rib
{%         endif %}
{%         if router_traffic_engineering.segment_routing.policy_endpoints is arista.avd.defined %}
{%             for endpoint in router_traffic_engineering.segment_routing.policy_endpoints | arista.avd.natural_sort('address') %}
{%                 for color in endpoint.colors | arista.avd.natural_sort('value') %}
{%                     if ns.delimiter is arista.avd.defined(true) %}
      !
{%                     endif %}
{%                     set ns.delimiter = true %}
      policy endpoint {{ endpoint.address }} color {{ color.value }}
{%                     if color.binding_sid is arista.avd.defined %}
         binding-sid {{ color.binding_sid }}
{%                     endif %}
{%                     if color.name is arista.avd.defined %}
         name {{ color.name }}
{%                     endif %}
{%                     if color.description is arista.avd.defined %}
         description {{ color.description }}
{%                     endif %}
{%                     if color.sbfd_remote_discriminator is arista.avd.defined %}
         sbfd remote-discriminator {{ color.sbfd_remote_discriminator }}
{%                     endif %}
{%                     for pathgroup in color.path_group | arista.avd.natural_sort('preference') %}
         !
         path-group preference {{ pathgroup.preference }}
{%                         if pathgroup.explicit_null is arista.avd.defined %}
            explicit-null {{ pathgroup.explicit_null }}
{%                         endif %}
{%                         for labelstack in pathgroup.segment_list | arista.avd.natural_sort('label_stack') %}
{%                             set stack = labelstack.label_stack %}
{%                             if labelstack.weight is arista.avd.defined %}
{%                                 set stack = stack ~ " weight " ~ labelstack.weight %}
{%                             endif %}
{%                             if labelstack.index is arista.avd.defined %}
{%                                 set stack = stack ~ " index " ~ labelstack.index %}
{%                             endif %}
            segment-list label-stack {{ stack }}
{%                         endfor %}
{%                     endfor %}
{%                 endfor %}
{%             endfor %}
{%         endif %}
{%     endif %}
{%     if router_traffic_engineering.flex_algos is arista.avd.defined %}
   flex-algo
{%         for flex_algo in router_traffic_engineering.flex_algos %}
{%             set flex_algo_cli = "flex-algo " ~ flex_algo.number %}
{%             if flex_algo.name is arista.avd.defined %}
{%                 set flex_algo_cli = flex_algo_cli ~ " " ~ flex_algo.name %}
{%             endif %}
      {{ flex_algo_cli }}
{%             if flex_algo.priority is arista.avd.defined %}
         priority {{ flex_algo.priority }}
{%             endif %}
{%             if flex_algo.administrative_group.include_all is arista.avd.defined or flex_algo.administrative_group.include_any is arista.avd.defined or flex_algo.administrative_group.exclude is arista.avd.defined %}
{%                 set admingrp_cli = "administrative-group" %}
{%                 if flex_algo.administrative_group.include_all is arista.avd.defined %}
{%                     set admingrp_cli = admingrp_cli ~ " include all " ~ flex_algo.administrative_group.include_all | join(",") %}
{%                 endif %}
{%                 if flex_algo.administrative_group.include_any is arista.avd.defined %}
{%                     set admingrp_cli = admingrp_cli ~ " include any " ~ flex_algo.administrative_group.include_any | join(",") %}
{%                 endif %}
{%                 if flex_algo.administrative_group.exclude is arista.avd.defined %}
{%                     set admingrp_cli = admingrp_cli ~ " exclude " ~ flex_algo.administrative_group.exclude | join(",") %}
{%                 endif %}
         {{ admingrp_cli }}
{%             endif %}
{%             if flex_algo.metric is arista.avd.defined %}
         metric {{ flex_algo.metric }}
{%             endif %}
{%             if flex_algo.srlg_excludes is arista.avd.defined %}
         srlg exclude {{ flex_algo.srlg_excludes | join(",") }}
{%             endif %}
{%             if flex_algo.color is arista.avd.defined %}
         color {{ flex_algo.color }}
{%             endif %}
{%         endfor %}
{%     endif %}
{%     if router_traffic_engineering.router_id.ipv4 is arista.avd.defined %}
   router-id ipv4 {{ router_traffic_engineering.router_id.ipv4 }}
{%     endif %}
{%     if router_traffic_engineering.router_id.ipv6 is arista.avd.defined %}
   router-id ipv6 {{ router_traffic_engineering.router_id.ipv6 }}
{%     endif %}
{% endif %}
